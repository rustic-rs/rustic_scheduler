[package]
name = "rustic_scheduler"
version = "0.1.2"
authors = ["the rustic-rs team"]
categories = ["command-line-utilities"]
edition = "2021"
homepage = "https://rustic.cli.rs/"
keywords = [
  "backup",
  "restic",
  "cli",
  "scheduler",
]
license = "Apache-2.0 OR MIT"
repository = "https://github.com/rustic-rs/rustic_scheduler"
description = """
rustic scheduler - a client/server application to schedule regular backups on
many clients to one identical repository controlled by a central scheduling
server.
"""

[package.metadata.wix]
upgrade-guid = "C23C558D-97A1-454A-8B23-DA1368EE51A0"
path-guid = "D3BCB70C-354E-405C-A25E-431453E4CB58"
license = false
eula = false

[dependencies]
abscissa_tokio = "0.8.0"
anyhow = "1"
axum = { version = "0.7.6", features = ["ws"] }
chrono = "0.4.38"
clap = "4"
clap_derive = "4.5.18"
cron = "0.13.0"
env_logger = "0.11"
gethostname = "0.5.0"
log = "0.4.22"
rustic_backend = { version = "0.5.0", features = ["merge"] }
rustic_core = "0.6.1"
sailfish = "0.9.0"
serde = "1"
serde_derive = "1"
serde_json = "1"
serde_with = "3"
thiserror = "2"
tokio = { version = "1", features = ["full"] }
toml = "0.8.19"
tungstenite = "0.24.0"
url = "2.5"

[target.'cfg(not(windows))'.dependencies]
sha2 = { version = "0.10.8", features = ["asm"] }

[target.'cfg(windows)'.dependencies]
# unfortunately, the asm extensions do not build on Windows, see https://github.com/RustCrypto/asm-hashes/issues/17
# and https://github.com/RustCrypto/asm-hashes/pull/issues/78
sha2 = "0.10.8"

[dependencies.abscissa_core]
version = "0.8.1"
# optional: use `gimli` to capture backtraces
# see https://github.com/rust-lang/backtrace-rs/issues/189
# features = ["gimli-backtrace"]

[dev-dependencies]
abscissa_core = { version = "0.8.1", features = ["testing"] }
once_cell = "1.2"

# see: https://nnethercote.github.io/perf-book/build-configuration.html
[profile.dev]
opt-level = 0
debug = true
rpath = false
lto = false
debug-assertions = true
codegen-units = 4

# compile dependencies with optimizations in dev mode
# see: https://doc.rust-lang.org/stable/cargo/reference/profiles.html#overrides
[profile.dev.package."*"]
opt-level = 3
debug = true

[profile.release]
opt-level = 3
debug = false # true for profiling
rpath = false
lto = "fat"
debug-assertions = false
codegen-units = 1
strip = true
panic = "abort"

[profile.test]
opt-level = 1
debug = true
rpath = false
lto = false
debug-assertions = true
codegen-units = 4

[profile.bench]
opt-level = 3
debug = true # true for profiling
rpath = false
lto = true
debug-assertions = false
codegen-units = 1

# The profile that 'dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

[workspace.lints.rust]
unsafe_code = "forbid"
missing_docs = "warn"
rust_2018_idioms = { level = "warn", priority = -1 }
trivial_casts = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
bad_style = "warn"
dead_code = "allow" # TODO: "warn"
improper_ctypes = "warn"
missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
non_shorthand_field_patterns = "warn"
no_mangle_generic_items = "warn"
overflowing_literals = "warn"
path_statements = "warn"
patterns_in_fns_without_body = "warn"
trivial_numeric_casts = "warn"
unused_results = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unconditional_recursion = "warn"
unused = { level = "warn", priority = -1 }
unused_allocation = "warn"
unused_comparisons = "warn"
unused_parens = "warn"
while_true = "warn"
unreachable_pub = "allow"

[workspace.lints.clippy]
redundant_pub_crate = "allow"
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
# expect_used = "warn" # TODO!
# unwrap_used = "warn" # TODO!
enum_glob_use = "warn"
correctness = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }
complexity = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
cast_lossless = "warn"
default_trait_access = "warn"
doc_markdown = "warn"
manual_string_new = "warn"
match_same_arms = "warn"
semicolon_if_nothing_returned = "warn"
trivially_copy_pass_by_ref = "warn"
module_name_repetitions = "allow"
# TODO: Remove when Windows support landed
# mostly Windows-related functionality is missing `const`
# as it's only OK(()), but doesn't make it reasonable to
# have a breaking change in the future. They won't be const.
missing_const_for_fn = "allow"
needless_raw_string_hashes = "allow"

[workspace.lints.rustdoc]
# We run rustdoc with `--document-private-items` so we can document private items
private_intra_doc_links = "allow"
